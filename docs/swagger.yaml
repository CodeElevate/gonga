basePath: /api/v1
definitions:
  Models.Mention:
    type: object
  controllers.ErrorResponse:
    properties:
      error:
        type: string
    type: object
  controllers.UserResponse:
    properties:
      body:
        description: in:body
        properties:
          email:
            type: string
          id:
            type: integer
          name:
            type: string
          password:
            type: string
        type: object
    type: object
  requests.CreateCommentRequest:
    type: object
  requests.CreatePostRequest:
    type: object
  requests.UpdateCommentRequest:
    properties:
      body:
        minLength: 40
        type: string
      mentions:
        items:
          $ref: '#/definitions/Models.Mention'
        maxItems: 15
        type: array
    required:
    - body
    type: object
  requests.UpdatePostBodyRequest:
    properties:
      body:
        minLength: 40
        type: string
      mentions:
        items:
          $ref: '#/definitions/Models.Mention'
        maxItems: 15
        type: array
    required:
    - body
    type: object
  requests.UpdatePostRequest:
    type: object
  requests.UpdatePostTitleRequest:
    properties:
      title:
        minLength: 20
        type: string
    required:
    - title
    type: object
  utils.APIError:
    properties:
      code:
        example: 400
        type: integer
      critical:
        example: true
        type: boolean
      details:
        additionalProperties: true
        type: object
      field:
        example: username
        type: string
      message:
        example: Bad Request
        type: string
      suggestion:
        example: Try again later.
        type: string
    type: object
  utils.APIResponse:
    properties:
      data: {}
      errors:
        items:
          $ref: '#/definitions/utils.APIError'
        type: array
      message:
        type: string
      meta:
        additionalProperties: true
        type: object
      type:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: your.email@example.com
    name: Your Name
    url: http://your-website.com
  description: This is the Swagger documentation for the Gonga API.
  title: Gonga API Documentation
  version: "1.0"
paths:
  /posts:
    get:
      description: Retrieves a list of all posts from the server.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.APIResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.APIResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/utils.APIResponse'
      summary: Get all posts
      tags:
      - Posts
    post:
      consumes:
      - application/json
      parameters:
      - description: Post data
        in: body
        name: post
        required: true
        schema:
          $ref: '#/definitions/requests.CreatePostRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Create a new post
      tags:
      - Posts
  /posts/{id}:
    delete:
      parameters:
      - description: Post ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Delete a post
      tags:
      - Posts
    get:
      parameters:
      - description: Post ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get a post by ID
      tags:
      - Posts
    put:
      consumes:
      - application/json
      parameters:
      - description: Post ID
        in: path
        name: id
        required: true
        type: integer
      - description: Post data
        in: body
        name: post
        required: true
        schema:
          $ref: '#/definitions/requests.UpdatePostRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Update a post
      tags:
      - Posts
  /posts/{id}/body:
    put:
      consumes:
      - application/json
      parameters:
      - description: Post ID
        in: path
        name: id
        required: true
        type: integer
      - description: Post body data
        in: body
        name: post
        required: true
        schema:
          $ref: '#/definitions/requests.UpdatePostBodyRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Update the body of a post
      tags:
      - Posts
  /posts/{id}/comments:
    post:
      consumes:
      - application/json
      parameters:
      - description: Post ID
        in: path
        name: id
        required: true
        type: integer
      - description: Comment data
        in: body
        name: comment
        required: true
        schema:
          $ref: '#/definitions/requests.CreateCommentRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Add a comment to a post
      tags:
      - Comments
  /posts/{id}/comments/{comment_id}:
    delete:
      parameters:
      - description: Post ID
        in: path
        name: id
        required: true
        type: integer
      - description: Comment ID
        in: path
        name: comment_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Delete a comment from a post
      tags:
      - Comments
    put:
      consumes:
      - application/json
      parameters:
      - description: Post ID
        in: path
        name: id
        required: true
        type: integer
      - description: Comment ID
        in: path
        name: comment_id
        required: true
        type: integer
      - description: Comment data
        in: body
        name: comment
        required: true
        schema:
          $ref: '#/definitions/requests.UpdateCommentRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Update a comment on a post
      tags:
      - Comments
  /posts/{id}/like:
    post:
      parameters:
      - description: Post ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Like a post
      tags:
      - Posts
  /posts/{id}/title:
    put:
      consumes:
      - application/json
      parameters:
      - description: Post ID
        in: path
        name: id
        required: true
        type: integer
      - description: Post title data
        in: body
        name: post
        required: true
        schema:
          $ref: '#/definitions/requests.UpdatePostTitleRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Update the title of a post
      tags:
      - Posts
  /posts/{id}/unlike:
    post:
      parameters:
      - description: Post ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Unlike a post
      tags:
      - Posts
  /users/{id}:
    get:
      description: Get user information by user ID
      operationId: get-user-by-id
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.UserResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      summary: Get user by ID
swagger: "2.0"
